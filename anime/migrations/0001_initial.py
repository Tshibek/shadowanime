# Generated by Django 2.1.2 on 2018-11-19 12:53

import anime.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import embed_video.fields
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tags', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Anime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='title')),
                ('title_en', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('title_roman', models.CharField(blank=True, default='', max_length=191, null=True)),
                ('title_kanji', models.CharField(blank=True, default='', max_length=191, null=True)),
                ('description', models.TextField(blank=True, default='', max_length=2000)),
                ('picture', sorl.thumbnail.fields.ImageField(blank=True, default='img/anime/default/brak_obrazka.jpg', upload_to=anime.models.user_directory_path)),
                ('type_series', models.CharField(choices=[('TV', 'TV'), ('ONA', 'ONA'), ('FILM', 'FILM'), ('OVA', 'OVA')], default='', max_length=5)),
                ('pub_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status_anime', models.CharField(choices=[('Emitowane', 'Emitowane'), ('Zapowiedź', 'Zapowiedź'), ('Zakończone', 'Zakończone'), ('Deklaracja', 'Deklaracja')], default='', max_length=20)),
                ('mpaa', models.CharField(choices=[('', '--'), ('G', 'G - Wszystkie grupy wiekowe'), ('PG', 'PG - Materiał nieodpowiedni dla dzieci'), ('PG-13', 'PG-13 - Materiał dla osób powyżej 13 roku życia'), ('R', 'R - Materiały dla osób powyżej 17 roku życia (przemoc, wulgaryzmy)'), ('R+', 'R+ - Niektóre materiały mogą być nieodpowiednie dla osób poniżej 17 roku życia, zawiera nagość'), ('Rx', 'Rx - Materiały są nieodpowiednie dla osób poniżej 18 roku życia, zawierają pornografię'), ('Ry', 'Ry - Materiały są nieodpowiednie dla osób poniżej 18 roku życia, zawierają homoseksualną pornografię')], default='', max_length=5)),
                ('number_episode', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('episode_time', models.CharField(max_length=20)),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ChildAnime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Sequel', 'Sequel'), ('Prequel', 'Prequel'), ('Główna Historia', 'Główna Historia'), ('Historia Poboczna', 'Historia Poboczna'), ('Pełna Historia', 'Pełna Historia'), ('Podsumowanie', 'Podsumowanie'), ('Spin-off', 'Spin-off'), ('Postacie', 'Postacie'), ('Alternatywna Wersja', 'Alternatywna Wersja'), ('Alternatywny Świat', 'Alternatywny Świat'), ('Inne', 'Inne')], default='', max_length=25)),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='for_animes', to='anime.Anime')),
                ('child_anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_animes', to='anime.Anime')),
            ],
        ),
        migrations.CreateModel(
            name='EpisodsAnime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_pl', models.CharField(blank=True, default='', max_length=191)),
                ('name_eng', models.CharField(blank=True, default='', max_length=191)),
                ('name_rom', models.CharField(blank=True, default='', max_length=191)),
                ('name_kan', models.CharField(blank=True, default='', max_length=191)),
                ('filler', models.BooleanField(blank=True, default=False)),
                ('Published', models.BooleanField(default=False)),
                ('special', models.BooleanField(blank=True, default=False)),
                ('typ', models.CharField(choices=[('standardowy', 'standardowy'), ('specjalny', 'specjalny'), ('OVA', 'OVA')], max_length=30)),
                ('dlugosc', models.PositiveIntegerField(blank=True, default=25)),
                ('numer', models.PositiveIntegerField()),
                ('channel', models.CharField(blank=True, default='', max_length=191)),
                ('premiera', models.DateField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('message', models.TextField(blank=True, default='', null=True)),
                ('anime_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime.Anime')),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-numer'],
            },
        ),
        migrations.CreateModel(
            name='PlayerEpisode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_1', embed_video.fields.EmbedVideoField(blank=True, default='', null=True)),
                ('player_2', embed_video.fields.EmbedVideoField(blank=True, default='', null=True)),
                ('player_3', embed_video.fields.EmbedVideoField(blank=True, default='', null=True)),
                ('player_4', embed_video.fields.EmbedVideoField(blank=True, default='', null=True)),
                ('player_5', embed_video.fields.EmbedVideoField(blank=True, default='', null=True)),
                ('player_6', embed_video.fields.EmbedVideoField(blank=True, default='', null=True)),
                ('voice_lang', models.CharField(choices=[('Japoński', 'Japoński'), ('Polski', 'Polski'), ('Angielski', 'Angielski'), ('Chiński', 'Chiński'), ('Koreański', 'Koreański')], default='VOICE_LANG.Japoński', max_length=20)),
                ('subs_lang', models.CharField(choices=[('-', '--'), ('Japoński', 'Japoński'), ('Polski', 'Polski'), ('Angielski', 'Angielski'), ('Chiński', 'Chiński'), ('Koreański', 'Koreański')], default='VOICE_LANG.Polski', max_length=20)),
                ('resolution', models.CharField(choices=[('-', '--'), ('<320p', '<320p'), ('360p', '360p'), ('480p', '480p'), ('720p', '720p'), ('1080p', '1080p')], default='RESOLUTION.480p', max_length=8)),
                ('author_sub', models.CharField(default=' ', max_length=191)),
                ('source_video', models.URLField(blank=True, default=' ', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('message', models.TextField(blank=True, default='', null=True)),
                ('Published', models.BooleanField(default=False)),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('episode_anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime.EpisodsAnime')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ScoreAnime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('story', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('character', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('graphics', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('music', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('anime_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anime', to='anime.Anime')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TagAnime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('message', models.TextField(blank=True, default='', null=True)),
                ('Published', models.BooleanField(default=False)),
                ('anime_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime.Anime')),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.Tag')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='taganime',
            unique_together={('anime_title', 'tag')},
        ),
        migrations.AlterUniqueTogether(
            name='scoreanime',
            unique_together={('user', 'anime_title')},
        ),
        migrations.AlterUniqueTogether(
            name='episodsanime',
            unique_together={('name_pl', 'name_eng', 'name_rom', 'name_kan', 'anime_title')},
        ),
    ]
